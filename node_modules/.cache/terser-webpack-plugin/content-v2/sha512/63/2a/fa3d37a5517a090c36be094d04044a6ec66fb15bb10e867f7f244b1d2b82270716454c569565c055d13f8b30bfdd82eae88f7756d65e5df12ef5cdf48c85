{"map":"{\"version\":3,\"sources\":[\"C:\\\\cygwin64\\\\home\\\\xxyyxx\\\\robofriends\\\\robofriends\\\\src\\\\components\\\\Card.js\",\"C:\\\\cygwin64\\\\home\\\\xxyyxx\\\\robofriends\\\\robofriends\\\\src\\\\components\\\\CardList.js\",\"C:\\\\cygwin64\\\\home\\\\xxyyxx\\\\robofriends\\\\robofriends\\\\src\\\\components\\\\SearchBox.js\",\"C:\\\\cygwin64\\\\home\\\\xxyyxx\\\\robofriends\\\\robofriends\\\\src\\\\components\\\\Scroll.js\",\"C:\\\\cygwin64\\\\home\\\\xxyyxx\\\\robofriends\\\\robofriends\\\\src\\\\containers\\\\App.js\",\"C:\\\\cygwin64\\\\home\\\\xxyyxx\\\\robofriends\\\\robofriends\\\\src\\\\serviceWorker.js\",\"C:\\\\cygwin64\\\\home\\\\xxyyxx\\\\robofriends\\\\robofriends\\\\src\\\\index.js\"],\"names\":[\"Card\",\"_ref\",\"name\",\"email\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"cardArray\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"SearchBox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"yNAeeA,EAbF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,GAC1B,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uDACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAI,aAAaC,IAAG,wBAAAC,OAA0BP,EAA1B,cACzBC,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAKL,GACLG,EAAAC,EAAAC,cAAA,IAAA,KAAIJ,MCMGS,EAZE,SAAAX,GAAc,IAAZY,EAAYZ,EAAZY,OACXC,EAAYD,EAAOE,IAAI,SAACC,EAAMC,GAClC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,CAAMC,IAAKN,EAAOI,GAAGb,GAAIA,GAAIS,EAAOI,GAAGb,GAAIF,KAAMW,EAAOI,GAAGf,KAAMC,MAAOU,EAAOI,GAAGd,UAG3F,OACEE,EAAAC,EAAAC,cAAA,MAAA,KACGO,ICKQM,EAZG,SAAAnB,GAAgCA,EAA9BoB,YAA8B,IAAjBC,EAAiBrB,EAAjBqB,aAC/B,OACEjB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAA,CACEC,UAAY,mCACZe,KAAK,SACLC,YAAY,eACZC,SAAUH,MCDHI,EAPE,SAACC,GACd,OACEtB,EAAAC,EAAAC,cAAA,MAAA,CAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClEJ,EAAMK,WC0CAC,qBAvCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaFI,eAAiB,SAACC,GAChBR,EAAKS,SAAS,CAACtB,YAAaqB,EAAME,OAAOC,SAbzCX,EAAKY,MAAQ,CACXjC,OAAQ,GACRQ,YAAa,IAJJa,mFAQM,IAAAa,EAAAV,KACjBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAC9B,OAAQuC,uCAOhC,IAAAC,EACwBhB,KAAKS,MAA5BjC,EADDwC,EACCxC,OAAQQ,EADTgC,EACShC,YACTiC,EAAiBzC,EAAO0C,OAAO,SAAAC,GACnC,OAAOA,EAAMtD,KAAKuD,cAAcC,SAASrC,EAAYoC,iBAEvD,OAAI5C,EAAO8C,OAIPtD,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACqD,EAAD,CAAWtC,aAAiBe,KAAKI,iBACjCpC,EAAAC,EAAAC,cAACsD,EAAD,KACExD,EAAAC,EAAAC,cAACuD,EAAD,CAAUjD,OAAQyC,MAPjBjD,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,MAAd,kBAzBKuD,EAAAA,YCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECTNC,EAAAA,EAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe,SDkH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\nconst Card = ({name, email, id}) => {\\r\\n  return(\\r\\n    <div className=\\\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\\\">\\r\\n      <img alt=\\\"Foto Robot\\\" src={`https://robohash.org/${id}?200x200`} />\\r\\n      <div>\\r\\n        <h2>{name}</h2>\\r\\n        <p>{email}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\n\\r\\nexport default Card;\\r\\n\",\"import React from 'react';\\r\\nimport Card from './Card';\\r\\nconst CardList = ({robots}) => {\\r\\n  const cardArray = robots.map((user, i) => {\\r\\n    return <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\\r\\n\\r\\n  })\\r\\n  return(\\r\\n    <div>\\r\\n      {cardArray}\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default CardList;\\r\\n\",\"import React from 'react';\\r\\n\\r\\nconst SearchBox = ({searchfield, searchChange}) =>{\\r\\n  return(\\r\\n    <div className=\\\"pa2\\\">\\r\\n      <input\\r\\n        className = \\\"pa3 ba b--green bg-lightest-blue\\\"\\r\\n        type=\\\"search\\\"\\r\\n        placeholder=\\\"Search Robot\\\"\\r\\n        onChange={searchChange}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\nexport default SearchBox;\\r\\n\",\"import React from 'react';\\r\\n  const Scroll = (props) => {\\r\\n    return(\\r\\n      <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\\r\\n        {props.children}\\r\\n      </div>\\r\\n    );\\r\\n  };\\r\\nexport default Scroll;\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport CardList from '../components/CardList';\\r\\nimport SearchBox from '../components/SearchBox';\\r\\nimport Scroll from '../components/Scroll';\\r\\nimport './App.css';\\r\\n\\r\\nclass App extends Component{\\r\\n  constructor(){\\r\\n    super()\\r\\n    this.state = {\\r\\n      robots: [],\\r\\n      searchfield: ''\\r\\n    }\\r\\n  }\\r\\n\\r\\n  componentDidMount(){\\r\\n    fetch('https://jsonplaceholder.typicode.com/users')\\r\\n    .then(response => response.json())\\r\\n    .then(users => this.setState({robots: users}));\\r\\n  }\\r\\n\\r\\n  onSearchChange = (event) => {\\r\\n    this.setState({searchfield: event.target.value})\\r\\n  }\\r\\n\\r\\n  render(){\\r\\n    const {robots, searchfield} = this.state;\\r\\n    const filteredRobots = robots.filter(robot => {\\r\\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\\r\\n    })\\r\\n    if(!robots.length){\\r\\n      return <h1 className=\\\"tc\\\">Loading</h1>\\r\\n    } else{\\r\\n      return(\\r\\n        <div className=\\\"tc\\\">\\r\\n          <h1 className=\\\"f1\\\">RoboFriends</h1>\\r\\n          <SearchBox searchChange = { this.onSearchChange }/>\\r\\n          <Scroll>\\r\\n            <CardList robots={filteredRobots}/>\\r\\n          </Scroll>\\r\\n        </div>\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App'\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,t,n){},15:function(e,t,n){},19:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o),l=(n(13),n(3)),i=n(4),s=n(6),h=n(5),u=n(7),m=function(e){var t=e.name,n=e.email,a=e.id;return r.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{alt:\"Foto Robot\",src:\"https://robohash.org/\".concat(a,\"?200x200\")}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,t),r.a.createElement(\"p\",null,n)))},d=function(e){var t=e.robots,n=t.map(function(e,n){return r.a.createElement(m,{key:t[n].id,id:t[n].id,name:t[n].name,email:t[n].email})});return r.a.createElement(\"div\",null,n)},b=function(e){e.searchfield;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"Search Robot\",onChange:t}))},f=function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"1px solid black\",height:\"600px\"}},e.children)},g=(n(15),function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(s.a)(this,Object(h.a)(t).call(this))).onSearchChange=function(t){e.setState({searchfield:t.target.value})},e.state={robots:[],searchfield:\"\"},e}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e.setState({robots:t})})}},{key:\"render\",value:function(){var e=this.state,t=e.robots,n=e.searchfield,a=t.filter(function(e){return e.name.toLowerCase().includes(n.toLowerCase())});return t.length?r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),r.a.createElement(b,{searchChange:this.onSearchChange}),r.a.createElement(f,null,r.a.createElement(d,{robots:a}))):r.a.createElement(\"h1\",{className:\"tc\"},\"Loading\")}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(17);c.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(19)}},[[8,2,1]]]);","extractedComments":[]}